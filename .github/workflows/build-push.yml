name: Build and Push API & Web

on:
  push:
    branches:
      - "main"
      - "deploy/dev"
  release:
    types: [published]

concurrency:
  group: build-push-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWWORD }}
  API_IMAGE_NAME: 'ixinjulu/hacienda-api'
  WEB_IMAGE_NAME: 'ixinjulu/hacienda-web'

jobs:
  build:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'arm64_runner' || 'ubuntu-latest' }}
    if: github.repository == 'jamon8888/hacienda-platform'
    strategy:
      matrix:
        include:
          - service_name: "build-api-amd64"
            image_name: "ixinjulu/hacienda-api"
            context: "./api"               # Correct path to api directory
            dockerfile: "./api/Dockerfile"  # Path to Dockerfile in api
            platform: linux/amd64
          - service_name: "build-api-arm64"
            image_name: "ixinjulu/hacienda-api"
            context: "./api"
            dockerfile: "./api/Dockerfile"
            platform: linux/arm64
          - service_name: "build-web-amd64"
            image_name: "ixinjulu/hacienda-web"
            context: "./web"               # Correct path to web directory
            dockerfile: "./web/Dockerfile"  # Path to Dockerfile in web
            platform: linux/amd64
          - service_name: "build-web-arm64"
            image_name: "ixinjulu/hacienda-web"
            context: "./web"
            dockerfile: "./web/Dockerfile"
            platform: linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }} # Directory containing Dockerfile (api or web)
          file: ${{ matrix.dockerfile }} # Path to the specific Dockerfile
          platforms: ${{ matrix.platform }} # Supports multi-platform (amd64, arm64)
          tags: ${{ matrix.image_name }}:latest # Push to Docker Hub with the latest tag
          push: true # Push the image to Docker Hub
          cache-from: type=gha,scope=${{ matrix.service_name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service_name }}

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service_name: "merge-api-images"
            image_name: "ixinjulu/hacienda-api"
          - service_name: "merge-web-images"
            image_name: "ixinjulu/hacienda-web"

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create and push manifest for API
        if: matrix.service_name == 'merge-api-images'
        run: |
          docker buildx imagetools create \
            --tag ${{ matrix.image_name }}:latest \
            ${{ matrix.image_name }}:latest-amd64 \
            ${{ matrix.image_name }}:latest-arm64

      - name: Create and push manifest for Web
        if: matrix.service_name == 'merge-web-images'
        run: |
          docker buildx imagetools create \
            --tag ${{ matrix.image_name }}:latest \
            ${{ matrix.image_name }}:latest-amd64 \
            ${{ matrix.image_name }}:latest-arm64

      - name: Inspect pushed images
        run: |
          docker buildx imagetools inspect ${{ matrix.image_name }}:latest
