name: Build and Push API & Web

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

env:
  DIFY_WEB_IMAGE_NAME: ${{ vars.DIFY_WEB_IMAGE_NAME }}
  DIFY_API_IMAGE_NAME: ${{ vars.DIFY_API_IMAGE_NAME }}
  registry: ${{ secrets.CI_HOSTNAME }}
  username: ${{ secrets.CI_USERNAME }}
  password: ${{ secrets.CI_PASSWORD }}
  NAMESPACE: ${{ secrets.sqhd-dify-test }}
  KUBECONFIG: ${{ secrets.KUBECONFIG }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        include:
          - service_name: "web"
            image_name_env: "DIFY_WEB_IMAGE_NAME"
            context: "web"
          - service_name: "api"
            image_name_env: "DIFY_API_IMAGE_NAME"
            context: "api"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ env.DOCKERHUB_USER }}
      #     password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Login to CI
        # run: |
        #   echo $password | buildah login --username $username --password-stdin $registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ env.username }}
          password: ${{ env.password }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env[matrix.image_name_env] }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=branch
            type=sha,enable=true,priority=100,prefix=,suffix=,format=long
            type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:${{ matrix.context }}"
          platforms: ${{ startsWith(github.ref, 'refs/tags/') && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          build-args: COMMIT_SHA=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      - name: generate kubeconfig
        uses: appleboy/kubernetes-action@v0.0.1
        with:
          server: ${{ secrets.K8S_SERVER }}
          ca_cert: ${{ secrets.K8S_CA_CERT }}
          token: ${{ secrets.K8S_TOKEN }}
          output: kubeconfig.yaml

      - name: deploy
        env:
          KUBECONFIG: kubeconfig.yaml
        run: |
          sudo chmod 644 kubeconfig.yaml
          kubectl get pods -n sqhd-dify-test
          IMAGE_TAG=${{ steps.meta.outputs.json.labels['org.opencontainers.image.revision'] }}
          echo ${{ steps.meta.outputs.json.labels['org.opencontainers.image.revision'] }}
